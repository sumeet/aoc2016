section .text
;; TODO: without libc
global main
extern printf

%define cursor_reg r8
%define get_ascii_from_grid(r) byte [grid + r]

%macro passcode_insert_num 1
; %1: number to insert (reg)
  movzx rax, byte [passcode_len]
  movzx rbx, get_ascii_from_grid(%1)
  mov [passcode + rax], rbx
  inc byte [passcode_len]
%endmacro

%define INPUT input

main:
init:
  mov cursor_reg, 0
find_starting_number_loop:
  movzx rax, get_ascii_from_grid(cursor_reg)
  cmp rax, '5'
  je parse_loop
  inc cursor_reg
  jmp find_starting_number_loop
parse_loop:
  mov rax, [input_cursor]
  movzx rax, byte [rax + INPUT]

  cmp rax, 0
  je handle_null_terminator

  cmp rax, 10 
  je handle_newline

  cmp rax, 'U'
  je handle_up

  cmp rax, 'L'
  je handle_left

  cmp rax, 'R'
  je handle_right

  cmp rax, 'D'
  je handle_down

  ; this should never happen
  jmp panic
handle_up:
  mov rax, cursor_reg
  sub rax, ROW_LENGTH
  cmp get_ascii_from_grid(rax), ' '
  je continue_parse_loop
  sub cursor_reg, ROW_LENGTH
  jmp continue_parse_loop
handle_left:
  mov rax, cursor_reg
  sub rax, 1
  cmp get_ascii_from_grid(rax), ' '
  je continue_parse_loop
  sub cursor_reg, 1
  jmp continue_parse_loop
handle_right:
  mov rax, cursor_reg
  add rax, 1
  cmp get_ascii_from_grid(rax), ' '
  je continue_parse_loop
  add cursor_reg, 1
  jmp continue_parse_loop
handle_down:
  mov rax, cursor_reg
  add rax, ROW_LENGTH
  cmp get_ascii_from_grid(rax), ' '
  je continue_parse_loop
  add cursor_reg, ROW_LENGTH
  jmp continue_parse_loop
continue_parse_loop:
  inc qword [input_cursor]
  jmp parse_loop
handle_newline:
  passcode_insert_num cursor_reg
  jmp continue_parse_loop
handle_null_terminator:
  passcode_insert_num cursor_reg
  jmp print
panic:
  hlt
print:
  mov rsi, passcode
  mov rdi, message
  mov rax, 0
  call printf
  mov rax, 0
  ret

section .data
; add top and bottom padding if the calculations go off the end of the structure (since going up and down
; are +/- 5 
grid db \
 "     ", \
 "  1  ", \
 " 234 ", \
 "56789", \
 " ABC ", \
 "  D  ", \
 "     "
ROW_LENGTH equ 5


passcode times 100 db 0
passcode_len: db 0

message db "%s", 10, 0

input_cursor: dq 0

sample db "ULL", 10, \
  "RRDDD", 10, \
  "LURDL", 10, \
  "UUUUD", 0
input db \
  "UDRLRRRUULUUDULRULUDRDRURLLDUUDURLUUUDRRRLUUDRUUDDDRRRLRURLLLDDDRDDRUDDULUULDDUDRUUUDLRLLRLDUDUUUUDLDULLLDRLRLRULDDDDDLULURUDURDDLLRDLUDRRULDURDDLUDLLRRUDRUDDDLLURULRDDDRDRRLLUUDDLLLLRLRUULRDRURRRLLLLDULDDLRRRRUDRDULLLDDRRRDLRLRRRLDRULDUDDLDLUULRDDULRDRURRURLDULRUUDUUURDRLDDDURLDURLDUDURRLLLLRDDLDRUURURRRRDRRDLUULLURRDLLLDLDUUUDRDRULULRULUUDDULDUURRLRLRRDULDULDRUUDLLUDLLLLUDDULDLLDLLURLLLRUDRDLRUDLULDLLLUDRLRLUDLDRDURDDULDURLLRRRDUUDLRDDRUUDLUURLDRRRRRLDDUUDRURUDLLLRRULLRLDRUURRRRRLRLLUDDRLUDRRDUDUUUDRUDULRRULRDRRRDDRLUUUDRLLURURRLLDUDRUURDLRURLLRDUDUUDLLLUULLRULRLDLRDDDU", 10, \
  "DRRRDRUDRLDUUDLLLRLULLLUURLLRLDRLURDRDRDRLDUUULDRDDLDDDURURUDRUUURDRDURLRLUDRRRDURDRRRDULLRDRRLUUUURLRUULRRDUDDDDUURLDULUDLLLRULUDUURRDUULRRDDURLURRUDRDRLDLRLLULULURLRDLRRRUUURDDUUURDRDRUURUDLULDRDDULLLLLRLRLLUDDLULLUDDLRLRDLDULURDUDULRDDRLUDUUDUDRLLDRRLLDULLRLDURUDRLRRRDULUUUULRRLUDDDLDUUDULLUUURDRLLULRLDLLUUDLLUULUULUDLRRDDRLUUULDDRULDRLURUURDLURDDRULLLLDUDULUDURRDRLDDRRLRURLLRLLLLDURDLUULDLDDLULLLRDRRRDLLLUUDDDLDRRLUUUUUULDRULLLDUDLDLURLDUDULRRRULDLRRDRUUUUUURRDRUURLDDURDUURURULULLURLLLLUURDUDRRLRRLRLRRRRRULLDLLLRURRDULLDLLULLRDUULDUDUDULDURLRDLDRUUURLLDLLUUDURURUD", 10, \
  "UDUUUUURUDLLLRRRDRDRUDDRLLDRRLDRLLUURRULUULULRLLRUDDRLDRLUURDUDLURUULLLULLRRRULRLURRDDULLULULRUDDDUURDRLUDUURRRRUUULLRULLLDLURUDLDDLLRRRULDLLUURDRRRDRDURURLRUDLDLURDDRLLLUUDRUULLDLLLLUUDRRURLDDUDULUDLDURDLURUURDUUUURDLLLRUUURDUUUDLDUDDLUDDUDUDUDLDUDUUULDULUURDDLRRRULLUDRRDLUDULDURUURULLLLUDDDLURURLRLRDLRULRLULURRLLRDUDUDRULLRULRUDLURUDLLDUDLRDRLRDURURRULLDDLRLDDRLRDRRDLRDDLLLLDUURRULLRLLDDLDLURLRLLDULRURRRRDULRLRURURRULULDUURRDLURRDDLDLLLRULRLLURLRLLDDLRUDDDULDLDLRLURRULRRLULUDLDUDUDDLLUURDDDLULURRULDRRDDDUUURLLDRDURUDRUDLLDRUD", 10, \
  "ULRDULURRDDLULLDDLDDDRLDUURDLLDRRRDLLURDRUDDLDURUDRULRULRULULUULLLLDRLRLDRLLLLLRLRRLRLRRRDDULRRLUDLURLLRLLURDDRRDRUUUDLDLDRRRUDLRUDDRURRDUUUDUUULRLDDRDRDRULRLLDLDDLLRLUDLLLLUURLDLRUDRLRDRDRLRULRDDURRLRUDLRLRLDRUDURLRDLDULLUUULDRLRDDRDUDLLRUDDUDURRRRDLDURRUURDUULLDLRDUDDLUDDDRRRULRLULDRLDDRUURURLRRRURDURDRULLUUDURUDRDRLDLURDDDUDDURUDLRULULURRUULDRLDULRRRRDUULLRRRRLUDLRDDRLRUDLURRRDRDRLLLULLUULRDULRDLDUURRDULLRULRLRRURDDLDLLRUUDLRLDLRUUDLDDLLULDLUURRRLRDULRLRLDRLDUDURRRLLRUUDLUURRDLDDULDLULUUUUDRRULLLLLLUULDRULDLRUDDDRDRDDURUURLURRDLDDRUURULLULUUUDDLRDULDDLULDUDRU", 10, \
  "LRLRLRLLLRRLUULDDUUUURDULLLRURLDLDRURRRUUDDDULURDRRDURLRLUDLLULDRULLRRRDUUDDRDRULLDDULLLUURDLRLRUURRRLRDLDUDLLRLLURLRLLLDDDULUDUDRDLRRLUDDLRDDURRDRDUUULLUURURLRRDUURLRDLLUDURLRDRLURUURDRLULLUUUURRDDULDDDRULURUULLUDDDDLRURDLLDRURDUDRRLRLDLRRDDRRDDRUDRDLUDDDLUDLUDLRUDDUDRUDLLRURDLRUULRUURULUURLRDULDLDLLRDRDUDDDULRLDDDRDUDDRRRLRRLLRRRUUURRLDLLDRRDLULUUURUDLULDULLLDLULRLRDLDDDDDDDLRDRDUDLDLRLUDRRDRRDRUURDUDLDDLUDDDDDDRUURURUURLURLDULUDDLDDLRUUUULRDRLUDLDDLLLRLLDRRULULRLRDURRRLDDRDDRLU", 0
